name: Mark Version as Production
run-name: Mark Version as Production (${{ github.event.inputs.version }})

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to mark as production (without v prefix)'
        required: true
        type: string

jobs:
  mark-production:
    name: Mark Version as Production
    runs-on: ubuntu-latest

    steps:
      - name: Verify version exists
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SECRET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          VERSION="${{ github.event.inputs.version }}"
          if ! aws --endpoint-url https://sfo3.digitaloceanspaces.com \
              s3 ls "s3://devplan-cli/releases/versions/${VERSION}/" &>/dev/null; then
            echo "Error: Version ${VERSION} does not exist in the Space. Make sure it has been released first."
            exit 1
          fi

          echo "Successfully verified version ${VERSION} exists"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Create production version file
        run: |
          DEVPLAN_RELEASE_VERSION="${{ github.event.inputs.version }}" go run internal/tools/gen_version/main.go

      - name: Upload version file to DigitalOcean Spaces
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.DO_SECRET_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.DO_SECRET_KEY }}
        run: |
          aws --endpoint-url https://sfo3.digitaloceanspaces.com \
            s3 cp version.json \
            s3://devplan-cli/releases/version.json \
            --acl public-read
